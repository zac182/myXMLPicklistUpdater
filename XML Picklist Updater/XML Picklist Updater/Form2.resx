<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="pictureBox2.InitialImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>